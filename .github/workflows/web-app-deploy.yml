# name: Build and Deploy Code On Time with Azure CLI

# on:
#   push:
#     branches:
#       - dev

# env:
#   AZURE_REGION: '"West US"'  # Cambia a tu región de Azure preferida
#   RESOURCE_GROUP: 'github-actions'  # Nombre del grupo de recursos
#   WEB_APP_NAME: 'test-cot-web-app'  # Nombre de la Web App
#   SERVICE_PLAN: 'test-cot-plan'  # Nombre del Plan de Servicio para App Service
#   SOLUTION: 'CooperReplenishmentSystem.sln'
#   BUILD_PLATFORM: 'Any CPU'
#   BUILD_CONFIGURATION: 'Release'

# jobs:
#   build_and_deploy:
#     runs-on: self-hosted    #windows-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     # Step 1: Login to Azure using Service Principal
#     - name: 'Login to Azure'
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}  # Credenciales SP almacenadas en secretos

#     # Step 2: Create Resource Group
#     - name: 'Create Resource Group'
#       run: |
#         az group create --name ${{ env.RESOURCE_GROUP }} --location ${{ env.AZURE_REGION }}

#     # Step 3: Create App Service Plan
#     - name: 'Create App Service Plan'
#       run: |
#         az appservice plan create --name ${{ env.SERVICE_PLAN }} --resource-group ${{ env.RESOURCE_GROUP }} --sku F1

#     # Step 4: Create Web App
#     - name: 'Create Web App'
#       run: |
#         az webapp create --name ${{ env.WEB_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --plan ${{ env.SERVICE_PLAN }}
#       # --runtime '"DOTNETCORE|6.0"'

#     # Step 5: Refresh BD with Code On Time
#     - name: Refresh BD with Code On Time
#       run: |
#         codeontime -refresh C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA -DbConnection "Data Source=teamqa.database.windows.net;Initial Catalog=teamqa-bd;Persist Security Info=True;User ID=team-qa-admin;Password=4dministrad0r$;" -dbprovider "sqlclient"
#       working-directory: 'C:\Program Files (x86)\Code OnTime LLC\Code OnTime Generator' 

#     # Step 6: Copy NReco.PdfGenerator.dll to WebSite bin
#     - name: Copy Microsoft.SqlServer.Types.dll to WebSite bin
#       run: |
#         cp -Recurse "C:\actions-runner\_work\bin" "C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA\WebSite\"
#     # New-Item -ItemType Directory -Path "C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA\WebSite\bin" -Force
#     # cp "C:\actions-runner\_work\Microsoft.SqlServer.Types.dll" "C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA\WebSite\bin\"

#     # Step 7: Publish the website using ASP.NET Compiler
#     - name: Publish WebSite
#       run: |
#         aspnet_compiler.exe -nologo -f -v / -p "C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA\WebSite" "C:\actions-runner\_work\COT-deploy-QA\a"
#       working-directory: 'C:\Windows\Microsoft.NET\Framework64\v4.0.30319'
      
#     - name: Create ZIP file
#       shell: powershell
#       run: Compress-Archive -Path "C:\actions-runner\_work\COT-deploy-QA\a\*" -DestinationPath "C:\actions-runner\_work\COT-deploy-QA\a\your-published-package.zip"

#     # Step 8: Deploy application to Azure Web App using Azure CLI
#     - name: 'Deploy to Azure Web App'
#       run: |
#         az webapp deployment source config-zip --name ${{ env.WEB_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --src "C:\actions-runner\_work\COT-deploy-QA\a\your-published-package.zip"  
# # Reemplaza con la ruta correcta



# name: Deploy Code On Time Updates to Azure App Service V2

# on:
#   push:
#     branches:
#       - dev

# env:
#   AZURE_REGION: '"West US"'  # Cambia a tu región de Azure si es necesario
#   RESOURCE_GROUP: 'github-actions'  # Nombre del grupo de recursos
#   WEB_APP_NAME: 'test-cot-web-app'  # Nombre del App Service existente
#   SOLUTION: 'CooperReplenishmentSystem.sln'
#   BUILD_PLATFORM: 'Any CPU'
#   BUILD_CONFIGURATION: 'Release'

# jobs:
#   deploy_updates:
#     runs-on: self-hosted  # o usa windows-latest si aplicable

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     # Step 1: Login to Azure using Service Principal
#     - name: 'Login to Azure'
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

#     # Step 2: Refresh DB with Code On Time
#     - name: Refresh BD with Code On Time
#       run: |
#         codeontime -refresh C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA -DbConnection "Data Source=teamqa.database.windows.net;Initial Catalog=teamqa-bd;Persist Security Info=True;User ID=team-qa-admin;Password=4dministrad0r$;" -dbprovider "sqlclient"
#       working-directory: 'C:\Program Files (x86)\Code OnTime LLC\Code OnTime Generator' 

#     # Step 3: Copy necessary files to WebSite bin
#     - name: Copy Microsoft.SqlServer.Types.dll to WebSite bin
#       run: |
#         cp -Recurse "C:\actions-runner\_work\bin" "C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA\WebSite\"

#     # Step 4: Publish the website using ASP.NET Compiler
#     - name: Publish WebSite
#       run: |
#         aspnet_compiler.exe -nologo -f -v / -p "C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA\WebSite" "C:\actions-runner\_work\COT-deploy-QA\a"
#       working-directory: 'C:\Windows\Microsoft.NET\Framework64\v4.0.30319'

#     - name: Create ZIP file
#       shell: powershell
#       run: Compress-Archive -Path "C:\actions-runner\_work\COT-deploy-QA\a\*" -DestinationPath "C:\actions-runner\_work\COT-deploy-QA\a\your-published-package.zip"

#     # Step 5: Deploy application to Azure Web App using Azure CLI
#     - name: Deploy updates to Azure Web App
#       run: |
#         az webapp deployment source config-zip --name ${{ env.WEB_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --src "C:\actions-runner\_work\COT-deploy-QA\a\your-published-package.zip"


name: Deploy Code On Time Updates to Azure App Service with Publish Profile

on:
  push:
    branches:
      - dev

env:
  AZURE_WEBAPP_NAME: 'test-cot-web-app'  # Nombre del App Service
  AZURE_WEBAPP_PACKAGE_PATH: 'C:\actions-runner\_work\COT-deploy-QA\a'  # Ruta del paquete publicado

jobs:
  deploy_updates:
    runs-on: self-hosted  # o usa windows-latest si aplicable

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 1: Refresh DB with Code On Time
    - name: Refresh BD with Code On Time
      run: |
        codeontime -refresh C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA -DbConnection "Data Source=teamqa.database.windows.net;Initial Catalog=teamqa-bd;Persist Security Info=True;User ID=team-qa-admin;Password=4dministrad0r$;" -dbprovider "sqlclient"
      working-directory: 'C:\Program Files (x86)\Code OnTime LLC\Code OnTime Generator' 

    # Step 2: Copy necessary files to WebSite bin
    - name: Copy Microsoft.SqlServer.Types.dll to WebSite bin
      run: |
        cp -Recurse "C:\actions-runner\_work\bin" "C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA\WebSite\"

    # Step 3: Publish the website using ASP.NET Compiler
    - name: Publish WebSite
      run: |
        aspnet_compiler.exe -nologo -f -v / -p "C:\actions-runner\_work\COT-deploy-QA\COT-deploy-QA\WebSite" "C:\actions-runner\_work\COT-deploy-QA\a"
      working-directory: 'C:\Windows\Microsoft.NET\Framework64\v4.0.30319'
      
 # Step 3.1: Create ZIP file
    - name: Create ZIP file
      shell: powershell
      run: |
        Compress-Archive -Path "C:\actions-runner\_work\COT-deploy-QA\a\*" -DestinationPath "C:\actions-runner\_work\COT-deploy-QA\a\your-published-package.zip"

    # Step 4: Deploy application to Azure Web App using Publish Profile
    - name: Deploy
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}\your-published-package.zip'
